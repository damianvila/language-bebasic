'scopeName': 'source.bebasic'
'name': 'Basic Engine BASIC'
'fileTypes': ['bas', 'basic']
'patterns': [
  # { # lines that do not begin with a line number are marked invalid
  #   'match': '^\\D+'
  #   'name': 'invalid.illegal.bebasic'
  # }
  { # numeric constants, which may include scientific notation
    'match': '(^\\d+)|(\\b(([0-9]+(\\.|\\s*E\\s*)?[0-9]*)|(\\.[0-9]+))\\b)'
    'captures':
      '1':
        'name': 'markup.bold.bebasic'
      '2':
        'name': 'constant.numeric.bebasic'
    'name': 'meta.constant.bebasic'
  }
  { # strings
    'match': '(")([^"]*(")|.*\\n|.*$)'
    'captures':
      '1':
        'name': 'punctuation.definition.string.begin.bebasic'
      '2':
        'name': 'string.quoted.double.bebasic'
      '3':
        'name': 'punctuation.definition.string.begin.bebasic'
    'name': 'meta.string.quoted.double.bebasic'
  }
  { # operators
    'match': ':|;|=|\\+|-|\\*|/|\\^|\\?|!|\\[|\\]|"|&|<|>|\\\\|@|_'
    'name': 'keyword.operator.bebasic'
  }
  { # AND operator
    'match': '\\b((?i)AND)'
    'name': 'keyword.operator.bebasic'
  }
  { # EOR operator
    'match': '\\b((?i)EOR)'
    'name': 'keyword.operator.bebasic'
  }
  { # MOD operator
    'match': '\\b((?i)MOD)'
    'name': 'keyword.operator.bebasic'
  }
  { # NOT operator
    'match': '\\b((?i)NOT)'
    'name': 'keyword.operator.bebasic'
  }
  { # OR operator
    'match': '\\b((?i)OR)'
    'name': 'keyword.operator.bebasic'
  }
  # { # functions without arguments are invalid
  #   'match': '\\b((?i)[A-Z]+\\$?)\\s*\\(\\)'
  #   'name': 'invalid.illegal.bebasic'
  # }
  { # ABS function
    'match': '\\b((?i)ABS)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # ANA function
    'match': '\\b((?i)ANA)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # ANGLE value
    'match': '\\b((?i)ANGLE)\\b'
    'name': 'entity.other.attribute-name.bebasic'
  }
  { # APPEND function
    'match': '\\b((?i)APPEND)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # ARG function
    'match': '\\b((?i)ARG(\\$|C)?)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # ATN function
    'match': '\\b((?i)ATN(2)?)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # BEEP function
    'match': '\\b((?i)BEEP)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # BG function
    'match': '\\b((?i)BG)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # BIN$ function
    'match': '\\b((?i)BIN(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # BLIT function
    'match': '\\b((?i)BLIT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # BLOAD function
    'match': '\\b((?i)BLOAD)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # BOOT function
    'match': '\\b((?i)BOOT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # BORDER function
    'match': '\\b((?i)BORDER)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # BSAVE function
    'match': '\\b((?i)BSAVE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # BSCR function
    'match': '\\b((?i)BSCR(X|Y))\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # CALL function
    'match': '\\b((?i)CALL)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # CHAIN function
    'match': '\\b((?i)CHAIN)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # CHAR function
    'match': '\\b((?i)CHAR)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # CHR$ function
    'match': '\\b((?i)CHR(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # CHDIR function
    'match': '\\b((?i)CHDIR)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # CIRCLE function
    'match': '\\b((?i)CIRCLE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # CLEAR function
    'match': '\\b((?i)CLEAR)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # CLOSE function
    'match': '\\b((?i)CLOSE)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # CLS function
    'match': '\\b((?i)CLS)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # CMD function
    'match': '\\b((?i)CMD)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # COLOR function
    'match': '\\b((?i)COLOR)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # COMPARE function
    'match': '\\b((?i)COMPARE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # CONFIG function
    'match': '\\b((?i)CONFIG( COLOR)?)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # CONT function
    'match': '\\b((?i)CONT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # COPY function
    'match': '\\b((?i)COPY)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # COS function
    'match': '\\b((?i)COS)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # CREDITS function
    'match': '\\b((?i)CREDITS)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # CSCROLL function
    'match': '\\b((?i)CSCROLL)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # CSIZE function
    'match': '\\b((?i)CSIZE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # CWD$ function
    'match': '\\b((?i)CWD(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # DATA function
    'match': '\\b((?i)DATA)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # DATE function
    'match': '\\b((?i)DATE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # DELETE function
    'match': '\\b((?i)DELETE)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # DIM function
    'match': '\\b((?i)DIM)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # DIR function
    'match': '\\b((?i)DIR(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # DO function
    'match': '\\b((?i)DO)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # EDIT function
    'match': '\\b((?i)EDIT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # ELSE function
    'match': '\\b((?i)ELSE)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # END function
    'match': '\\b((?i)END(IF)?)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # EOF function
    'match': '\\b((?i)EOF)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # ERROR function
    'match': '\\b((?i)ERROR((\\$)?|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # EXEC function
    'match': '\\b((?i)EXEC)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # EXP function
    'match': '\\b((?i)EXP)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # FILES function
    'match': '\\b((?i)FILES)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # FONT function
    'match': '\\b((?i)FONT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # FOR function
    'match': '\\b((?i)FOR)'
    'name': 'keyword.control.bebasic'
  }
  { # FORMAT function
    'match': '\\b((?i)FORMAT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # FRAME function
    'match': '\\b((?i)FRAME)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # FRAMESKIP function
    'match': '\\b((?i)FRAMESKIP)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # FREE function
    'match': '\\b((?i)FREE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # GET DATE TIME function
    'match': '\\b((?i)GET( DATE| TIME))\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # GOSUB function
    'match': '\\b((?i)GOSUB)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # GOTO function
    'match': '\\b((?i)GOTO)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # GPIN function
    'match': '\\b((?i)GPIN)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # GPOUT function
    'match': '\\b((?i)GPOUT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # GPRINT function
    'match': '\\b((?i)GPRINT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # GSCROLL function
    'match': '\\b((?i)GSCROLL)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # HELP function
    'match': '\\b((?i)HELP(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # HEX$ function
    'match': '\\b((?i)HEX(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # I2C(R|W) function
    'match': '\\b((?i)I2C(R|W))\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # IF function
    'match': '\\b((?i)IF)'
    'name': 'keyword.control.bebasic'
  }
  { # INKEY function
    'match': '\\b((?i)INKEY(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # INPUT$ function
    'match': '\\b((?i)INPUT(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # INST function
    'match': '\\b((?i)INST(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # INSTR function
    'match': '\\b((?i)INSTR)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # INT function
    'match': '\\b((?i)INT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # KEY function
    'match': '\\b((?i)KEY)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # LEFT$ function
    'match': '\\b((?i)LEFT(\\$|\\b))'
    'captures':
      '1':
        'name': 'entity.other.attribute-name.bebasic'
      '2':
        'name': 'entity.name.function.bebasic'
    'name': 'meta.entity.other.attribute-name.bebasic'
  }
  { # LET function
    'match': '\\b((?i)LET)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # LEN function
    'match': '\\b((?i)LEN)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # LINE function
    'match': '\\b((?i)LINE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # LOAD function
    'match': '\\b((?i)LOAD( BG| PCX)?)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # LOC function
    'match': '\\b((?i)LOC)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # LOCATE function
    'match': '\\b((?i)LOCATE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # LOF function
    'match': '\\b((?i)LOF)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # LOG function
    'match': '\\b((?i)LOG)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # LOOP function
    'match': '\\b((?i)LOOP)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # MAP function
    'match': '\\b((?i)MAP)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # MERGE function
    'match': '\\b((?i)MERGE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # MID$ function
    'match': '\\b((?i)MID(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # MKDIR function
    'match': '\\b((?i)MKDIR)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # MOVE function
    'match': '\\b((?i)MOVE( BG| SPRITE))\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # NEW function
    'match': '\\b((?i)NEW)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # NEXT function
    'match': '\\b((?i)NEXT)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # ON function
    'match': '\\b((?i)ON( ERROR| GOSUB| GOTO| PAD| PLAY| SPRITE))\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # OPEN function
    'match': '\\b((?i)OPEN)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PAD function
    'match': '\\b((?i)PAD)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PALETTE function
    'match': '\\b((?i)PALETTE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PEEK function
    'match': '\\b((?i)PEEK(D|W)?)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PLAY function
    'match': '\\b((?i)PLAY)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PLOT function
    'match': '\\b((?i)PLOT( MAP)?)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # POINT function
    'match': '\\b((?i)POINT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # POKE function
    'match': '\\b((?i)POKE(D|W)?)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # POP function
    'match': '\\b((?i)POP(B|F)(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # POS function
    'match': '\\b((?i)POS)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PREPEND function
    'match': '\\b((?i)PREPEND)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PRINT function
    'match': '\\b((?i)PRINT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PROC function
    'match': '\\b((?i)PROC)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PROFILE function
    'match': '\\b((?i)PROFILE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PSET function
    'match': '\\b((?i)PSET)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # PSIZE function
    'match': '\\b((?i)PSIZE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # READ function
    'match': '\\b((?i)READ)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # RECT function
    'match': '\\b((?i)RECT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # REDRAW function
    'match': '\\b((?i)REDRAW)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # REM command (comments)
    'match': '(REM.*(\\n|$))'
    'name': 'comment.line.bebasic'
  }
  { # REMOVE function
    'match': '\\b((?i)REMOVE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # RENAME function
    'match': '\\b((?i)RENAME)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # RENUM function
    'match': '\\b((?i)RENUM)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # RESTORE function
    'match': '\\b((?i)RESTORE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # RESUME function
    'match': '\\b((?i)RESUME)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # RET$ function
    'match': '\\b((?i)RET(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # RETURN function
    'match': '\\b((?i)RETURN)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # RGB function
    'match': '\\b((?i)RGB)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # RIGHT$ function
    'match': '\\b((?i)RIGHT(\\$|\\b))'
    'captures':
      '1':
        'name': 'entity.other.attribute-name.bebasic'
      '2':
        'name': 'entity.name.function.bebasic'
    'name': 'meta.entity.other.attribute-name.bebasic'
  }
  { # RMDIR function
    'match': '\\b((?i)RMDIR)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # RND function
    'match': '\\b((?i)RND)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # RUN function
    'match': '\\b((?i)RUN)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SAVE function
    'match': '\\b((?i)SAVE( BG| CONFIG| PCX)?)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SAY function
    'match': '\\b((?i)SAY)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SCALE value
    'match': '\\b((?i)SCALE)\\b'
    'name': 'entity.other.attribute-name.bebasic'
  }
  { # SCREEN function
    'match': '\\b((?i)SCREEN)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SEEK function
    'match': '\\b((?i)SEEK)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SET DATE function
    'match': '\\b((?i)SET DATE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SGN function
    'match': '\\b((?i)SGN)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SIN function
    'match': '\\b((?i)SIN)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SMODE function
    'match': '\\b((?i)SMODE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SOUND function
    'match': '\\b((?i)SOUND( FONT)?)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SPR function
    'match': '\\b((?i)SPR(COLL|X|Y))\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SPRITE function
    'match': '\\b((?i)SPRITE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SQR function
    'match': '\\b((?i)SQR)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SREAD function
    'match': '\\b((?i)SREAD)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SREADY function
    'match': '\\b((?i)SREADY)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # STOP function
    'match': '\\b((?i)STOP)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # STR$ function
    'match': '\\b((?i)STR(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # STRING$ function
    'match': '\\b((?i)STRING(\\$|\\b))'
    'name': 'entity.name.function.bebasic'
  }
  { # SWRITE function
    'match': '\\b((?i)SWRITE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # SYS function
    'match': '\\b((?i)SYS(INFO)?)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # TAN function
    'match': '\\b((?i)TAN)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # THEN command
    'match': '\\b((?i)THEN)'
    'name': 'keyword.control.bebasic'
  }
  { # TICK function
    'match': '\\b((?i)TICK)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # TILECOLL function
    'match': '\\b((?i)TILECOLL)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # TYPE function
    'match': '\\b((?i)TYPE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # VAL function
    'match': '\\b((?i)VAL)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # VPEEK function
    'match': '\\b((?i)VPEEK)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # VPOKE function
    'match': '\\b((?i)VPOKE)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # VREG function
    'match': '\\b((?i)VREG)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # VSYNC function
    'match': '\\b((?i)VSYNC)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # WAIT function
    'match': '\\b((?i)WAIT)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # WEND function
    'match': '\\b((?i)WEND)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # WHILE function
    'match': '\\b((?i)WHILE)\\b'
    'name': 'keyword.control.bebasic'
  }
  { # WINDOW function
    'match': '\\b((?i)WINDOW)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # XYZZY function
    'match': '\\b((?i)XYZZY)\\b'
    'name': 'entity.name.function.bebasic'
  }
  { # DOWN value
    'match': '\\b((?i)DOWN)\\b'
    'name': 'entity.other.attribute-name.bebasic'
  }
  { # UP value
    'match': '\\b((?i)UP)\\b'
    'name': 'entity.other.attribute-name.bebasic'
  }
  # { # LEFT value
  #   'match': '\\b((?i)LEFT)\\b'
  #   'name': 'entity.other.attribute-name.bebasic'
  # }
  # { # RIGHT value
  #   'match': '\\b((?i)RIGHT)\\b'
  #   'name': 'entity.other.attribute-name.bebasic'
  # }
  { # TILES value
    'match': '\\b((?i)TILES)\\b'
    'name': 'entity.other.attribute-name.bebasic'
  }
  { # SIZE value
    'match': '\\b((?i)SIZE)\\b'
    'name': 'entity.other.attribute-name.bebasic'
  }
  { # FLAGS value
    'match': '\\b((?i)FLAGS)\\b'
    'name': 'entity.other.attribute-name.bebasic'
  }
  { # PATTERN value
    'match': '\\b((?i)PATTERN)\\b'
    'name': 'entity.other.attribute-name.bebasic'
  }
  { # AS value
    'match': '\\b((?i)AS)\\b'
    'name': 'keyword.other.bebasic'
  }
  { # ON value
  'match': '\\b((?i)ON)\\b'
  'name': 'keyword.other.bebasic'
  }
  { # TO value
    'match': '\\b((?i)TO)\\b'
    'name': 'keyword.other.bebasic'
  }
  { # UNTIL value
    'match': '\\b((?i)UNTIL)\\b'
    'name': 'keyword.other.bebasic'
  }
  { # FN call
    'match': '\\b((?i)FN)\\b'
    'name': 'keyword.other.bebasic'
  }
]
